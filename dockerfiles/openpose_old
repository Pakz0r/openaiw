FROM nvidia/cuda:11.7.1-cudnn8-devel-ubuntu20.04

# enable non interactive mode to prevent questions
ENV DEBIAN_FRONTEND=noninteractive

# get deps
RUN apt update && apt install -y \
    cmake git g++ \
    libprotobuf-dev protobuf-compiler libopencv-dev \
    libgoogle-glog-dev libboost-all-dev libhdf5-dev libatlas-base-dev \
    python3-dev python3-pip python3-setuptools && \
    rm -rf /var/lib/apt/lists/*

# upgrade pip and install python dependencies
RUN python3 -m pip install --upgrade pip && \
    python3 -m pip install numpy opencv-python

# get openpose
WORKDIR /opt
RUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git && \
    cd openpose && \
    git submodule update --init --recursive --remote

# copy openpose models from local
COPY ./models/ /opt/openpose/models/

# build openpose
WORKDIR /opt/openpose
RUN mkdir build && cd build && \
    cmake -DBUILD_PYTHON=ON \
        -DDOWNLOAD_BODY_25_MODEL=OFF \
        -DDOWNLOAD_FACE_MODEL=OFF \ 
        -DDOWNLOAD_HAND_MODEL=OFF \
        -DUSE_CUDNN=OFF \
        .. && \
    make -j `nproc` && \
    make install

# add openpose to env path
ENV PATH="/opt/openpose/build:${PATH}"

# build pyopenpose
WORKDIR /opt/openpose/build/python/openpose
RUN make install

# setup env for pyopenpose
RUN cp ./pyopenpose.cpython-38-x86_64-linux-gnu.so /usr/local/lib/python3.8/dist-packages && \
    cd /usr/local/lib/python3.8/dist-packages && \
    ln -s pyopenpose.cpython-38-x86_64-linux-gnu.so pyopenpose

ENV LD_LIBRARY_PATH=/opt/openpose/build/python/openpose:$LD_LIBRARY_PATH

# set default command
WORKDIR /opt/openpose/build/examples/tutorial_api_python
# CMD ["python3", "01_body_from_image.py"]
CMD ["bash"]
